[{"categories":["SpringBoot"],"contents":" SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/C:/Users/XXXXXX/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/C:/Users/XXXXXX/.m2/org/apache/logging/log4j/log4j-slf4j-impl/2.13.3/log4j-slf4j-impl-2.13.3.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder] public static void main(String[] args) { System.out.println(\u0026ldquo;Hello world!\u0026rdquo;); }\n問題原因在於專案引用了兩個日誌框架，例如上面訊息說找到兩個slf4j binding，分別為：\nlogback-classic-1.2.3.jar log4j-slf4j-impl-2.11.2.jar。 因為slf4j一次只能綁定一個日誌框架，若slf4j在專案的classpath找到兩個日誌框架就會出現以上警告訊息。不過slf4j仍會選擇其中一個來綁定，例如上面最終綁定logback。\n若要避免出現警告訊息，必須排除其中一個日誌框架依賴。\n設定以下即可排除： 在Starter底下exclusion排除掉starter-logging \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter\u0026lt;/artifactId\u0026gt; \u0026lt;exclusions\u0026gt; \u0026lt;exclusion\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-logging\u0026lt;/artifactId\u0026gt; \u0026lt;/exclusion\u0026gt; \u0026lt;/exclusions\u0026gt; \u0026lt;/dependency\u0026gt; 加入Log4j2 dependency \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter\u0026lt;/artifactId\u0026gt; \u0026lt;exclusions\u0026gt; \u0026lt;exclusion\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-logging\u0026lt;/artifactId\u0026gt; \u0026lt;/exclusion\u0026gt; \u0026lt;/exclusions\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-web\u0026lt;/artifactId\u0026gt; \u0026lt;!-- Maven專案中若有spring-boot-starter依賴且已排除了spring-boot-starter-logging，下面就不用設定了 \u0026lt;exclusions\u0026gt; \u0026lt;exclusion\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-logging\u0026lt;/artifactId\u0026gt; \u0026lt;/exclusion\u0026gt; \u0026lt;/exclusions\u0026gt; --\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- log4j2 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-log4j2\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; ... \u0026lt;/dependencies\u0026gt; Spring Boot預設的日誌輸出等級是INFO。但若Sprinb Boot改用了log4j2框架並添加了設定檔如log4j2.properties，即使在沒作任何設定的情況下，Logger預設等級會改為log4j2的預設等級ERROR。 在src/main/resources下新增log4j2.properties並設定以下在console輸出日誌： log4j2.properites appender.console.type = Console appender.console.name = STDOUT appender.console.layout.type = PatternLayout appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n rootLogger.level = INFO rootLogger.appenderRefs = stdout rootLogger.appenderRef.stdout.ref = STDOUT Reference： Spring Boot SLF4J: Class path contains multiple SLF4J bindings. Spring Boot Log4j2 Maven Gradle dependencies 設定 Spring Boot 預設的日誌級別 default log level ","permalink":"https://ytaoCrow.github.io/blog/%E5%95%9F%E5%8B%95spring-boot%E5%B0%88%E6%A1%88%E6%99%82/","tags":["SpringBoot","SLF4J","Java"],"title":"啟動Spring Boot專案時，出現錯誤SLF4J: Class path contains multiple SLF4J bindings."},{"categories":["Java"],"contents":"Heading 1 ","permalink":"https://ytaoCrow.github.io/blog/tset/","tags":["Java"],"title":"我是測試文章"},{"categories":null,"contents":"","permalink":"https://ytaoCrow.github.io/blog/post-13/","tags":null,"title":""}]